services:
  postgresql:
    image: docker.io/library/postgres:16-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - ${DATA_BASE}/authentik/database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${AUTHENTIK_PG_PASS:?database password required}
      POSTGRES_USER: ${AUTHENTIK_PG_USER:-authentik}
      POSTGRES_DB: ${AUTHENTIK_PG_DB:-authentik}
    networks:
      - authentik
  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - ${DATA_BASE}/authentik/redis:/data
    networks:
      - authentik
  authentik-server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2024.6.3}
    container_name: authentik-server
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${AUTHENTIK_PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${AUTHENTIK_PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_PG_PASS}
      AUTHENTIK_DISABLE_STARTUP_ANALYTICS: ${AUTHENTIK_DISABLE_STARTUP_ANALYTICS:-true}
      AUTHENTIK_DISABLE_UPDATE_CHECK: ${AUTHENTIK_DISABLE_UPDATE_CHECK:-false}
      AUTHENTIK_ERROR_REPORTING__ENABLED: ${AUTHENTIK_ERROR_REPORTING__ENABLED:-false}
      AUTHENTIK_LOG_LEVEL: ${AUTHENTIK_LOG_LEVEL:-info}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY:-}
      AUTHENTIK_COOKIE_DOMAIN: ${AUTHENTIK_COOKIE_DOMAIN:-${DOMAIN}}
    volumes:
      - ${DATA_BASE}/authentik/media:/media
      - ${DATA_BASE}/authentik/custom-templates:/templates
      - ${DATA_BASE}/authentik/certs:/certs
    # ports:
    #   - "${AUTHENTIK_COMPOSE_PORT_HTTP:-9000}:9000"
    #   - "${AUTHENTIK_COMPOSE_PORT_HTTPS:-9443}:9443"
    depends_on:
      - postgresql
      - redis
      - traefik
    networks:
      - traefik
      - authentik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`auth.${DOMAIN}`)"
      - "traefik.http.routers.auth.service=authentik-server"
      - "traefik.http.services.authentik-server.loadbalancer.server.port=9000"
  worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2024.6.3}
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${AUTHENTIK_PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${AUTHENTIK_PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_PG_PASS}
      AUTHENTIK_DISABLE_STARTUP_ANALYTICS: ${AUTHENTIK_DISABLE_STARTUP_ANALYTICS:-true}
      AUTHENTIK_DISABLE_UPDATE_CHECK: ${AUTHENTIK_DISABLE_UPDATE_CHECK:-false}
      AUTHENTIK_ERROR_REPORTING__ENABLED: ${AUTHENTIK_ERROR_REPORTING__ENABLED:-false}
      AUTHENTIK_LOG_LEVEL: ${AUTHENTIK_LOG_LEVEL:-info}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY:-}
      AUTHENTIK_COOKIE_DOMAIN: ${AUTHENTIK_COOKIE_DOMAIN:-${DOMAIN}}
      AUTHENTIK_EMAIL__HOST: ${AUTHENTIK_EMAIL__HOST:-}
      AUTHENTIK_EMAIL__PORT: ${AUTHENTIK_EMAIL__PORT:-}
      AUTHENTIK_EMAIL__USERNAME: ${AUTHENTIK_EMAIL__USERNAME:-}
      AUTHENTIK_EMAIL__PASSWORD: ${AUTHENTIK_EMAIL__PASSWORD:-}
      AUTHENTIK_EMAIL__USE_TLS: ${AUTHENTIK_EMAIL__USE_TLS:-}
      AUTHENTIK_EMAIL__USE_SSL: ${AUTHENTIK_EMAIL__USE_SSL:-}
      AUTHENTIK_EMAIL__TIMEOUT: ${AUTHENTIK_EMAIL__TIMEOUT:-}
      AUTHENTIK_EMAIL__FROM: ${AUTHENTIK_EMAIL__FROM:-}
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DATA_BASE}/authentik/media:/media
      - ${DATA_BASE}/authentik/certs:/certs
      - ${DATA_BASE}/authentik/custom-templates:/templates
    depends_on:
      - postgresql
      - redis
    networks:
      - authentik
  authentik-domain-proxy:
    image: ghcr.io/goauthentik/proxy:${AUTHENTIK_TAG:-2024.6.3}
    # ports:
    #     - 9000:9000
    #     - 9443:9443
    environment:
      AUTHENTIK_HOST: https://auth.${DOMAIN}/
      AUTHENTIK_INSECURE: "true"
      AUTHENTIK_TOKEN: ${AUTHENTIK_DOMAIN_PROXY_TOKEN}
      # Starting with 2021.9, you can optionally set this too
      # when authentik_host for internal communication doesn't match the public URL
      # AUTHENTIK_HOST_BROWSER: https://auth.${DOMAIN}/
      # AUTHENTIK_DEBUG: true
    extra_hosts:
      - auth.${DOMAIN}:${DOCKER0_IP:-172.17.0.1} # docker0 ip
    labels:
      traefik.enable: true
      traefik.http.routers.domain-authentik.rule: HostRegexp(`^.+\.${DOMAIN}$`) && PathPrefix(`/outpost.goauthentik.io/`)
      traefik.http.routers.domain-authentik.service: domain-authentik
      traefik.http.routers.domain-authentik.priority: 100
      traefik.http.services.domain-authentik.loadbalancer.server.port: 9000
      traefik.http.middlewares.domain-authentik.forwardauth.address: http://authentik-domain-proxy:9000/outpost.goauthentik.io/auth/traefik
      traefik.http.middlewares.domain-authentik.forwardauth.trustForwardHeader: true
      traefik.http.middlewares.domain-authentik.forwardauth.authResponseHeadersRegex: ^X-authentik-
    networks:
      - traefik
  authentik-ldap:
    image: ghcr.io/goauthentik/ldap:${AUTHENTIK_TAG:-2024.6.3}
    ports:
      - 389:3389
    #     - 9443:9443
    environment:
      AUTHENTIK_HOST: https://auth.${DOMAIN}/
      AUTHENTIK_INSECURE: "true"
      AUTHENTIK_TOKEN: ${AUTHENTIK_LDAP_TOKEN}
      # Starting with 2021.9, you can optionally set this too
      # when authentik_host for internal communication doesn't match the public URL
      # AUTHENTIK_HOST_BROWSER: https://auth.${DOMAIN}/
      AUTHENTIK_DEBUG: true
    extra_hosts:
      - auth.${DOMAIN}:${DOCKER0_IP:-172.17.0.1} # docker0 ip
networks:
  authentik:
    name: authentik
